import { AuthProvider } from '../types';
declare const _default: (authProvider?: AuthProvider) => () => any;
export default _default;
export declare const handleLogin: (authProvider: AuthProvider) => (action: any) => IterableIterator<any>;
export declare const handleCheck: (authProvider: AuthProvider) => (action: any) => IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<{
    type: string;
}>>>;
export declare const handleLogout: (authProvider: AuthProvider) => (action: any) => IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<{
    type: string;
}>>>;
export declare const handleFetchError: (authProvider: AuthProvider) => (action: any) => IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"SELECT", import("redux-saga/effects").SelectEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<{
    type: string;
}>>>;
