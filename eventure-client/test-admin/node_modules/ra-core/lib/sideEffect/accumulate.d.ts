export declare const finalizeFactory: (tasks: any, accumulations: any) => (key: any, actionCreator: any) => IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<any>>>;
export declare const accumulateFactory: (tasks: any, accumulations: any, finalize: any) => (action: any) => IterableIterator<import("@redux-saga/types").SimpleEffect<"FORK", import("redux-saga/effects").ForkEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"CANCEL", import("redux-saga/effects").CancelEffectDescriptor>>;
export default function (): IterableIterator<import("@redux-saga/types").SimpleEffect<"FORK", import("redux-saga/effects").ForkEffectDescriptor>>;
